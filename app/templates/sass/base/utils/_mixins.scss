// Fonts
// ==========================================================================

@mixin importFont($fontname, $filename, $svgLabel, $isBold: false, $isItalic: false) {

    @font-face {
        font-family: $fontname;

        // IE9 Compat Modes
        src: url('#{$font-dir}/#{$filename}.eot');
        // IE6-IE8
        src: url('#{$font-dir}/#{$filename}.eot?#iefix') format('embedded-opentype'),
        // Modern Browsers
        url('#{$font-dir}/#{$filename}.woff') format('woff'),
        // Safari, Android, iOS
        url('#{$font-dir}/#{$filename}.ttf') format('truetype'),
        // Legacy iOS
        url('#{$font-dir}/#{$filename}.svg##{$svgLabel}') format('svg');

        @if $isBold {
            font-weight: bold;
        } @else {
            font-weight: normal;
        }

        @if $isItalic {
            font-style: italic;
        } @else {
            font-style: normal;
        }
    }

}


@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}


@mixin font-size($size: "") {
    // Size accepts:
    // • value from $font-size map
    // • rem value
    // • px value
    // • unitless value (treated as rem)
    // • empty (a default of base font size will be returned)

    font-size: size($size, px);
    font-size: size($size, rem);
}


@mixin line-height($size: "") {
    // Size accepts:
    // • value from $font-size map
    // • rem value
    // • px value
    // • unitless value
    //   (treated as a line-height multiplier, i.e. $size is returned)
    // • empty (a default line-height of $base-font-size * $line-height-multiplier will be returned)

    $unitless: false;
    @if $size != '' and type-of($size) != string and unit($size) == '' {
        $unitless: true;
    }
    @if $unitless == false {
        line-height: size($size, px, $line-height-multiplier, $unitless);
        line-height: size($size, rem, $line-height-multiplier, $unitless);
    } @else {
        line-height: size($size, null, null, $unitless);
    }
}


@mixin bgsize($type: cover) {
    background-size: $type;

    @at-root .no-backgroundsize & {
        // Ensure 'backgroundsize.min.htc' is a sibling of the page displaying this selector
        // May need to add -> AddType text/x-component .htc <- to htaccess
        -ms-behavior: url(#{$htc-dir}backgroundsize.min.htc);
    }
}